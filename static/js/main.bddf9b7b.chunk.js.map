{"version":3,"sources":["Components/front/icons/icon.jsx","Components/front/ui-elements/heading.jsx","Components/front/ui-elements/info-display.jsx","Components/front/ui-elements/subHeading.jsx","Components/front/weather.jsx","Components/background/bg.js","index.js"],"names":["Icon","props","name","iconName","react_default","a","createElement","className","Heading","content","InfoDisplay","units","SubHeading","baseURL","API","Weather","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sendToParent","callbackFromParent","state","cityName","fetchWeather","URL","searchValue","setState","loading","fetch","then","response","json","result","weatherDescription","weather","description","icon","id","temp","main","pressure","humidity","wind","speed","error","catch","e","message","fetchAndSend","setTimeout","updateInput","bind","assertThisInitialized","event","target","value","_this$state","propWeather","icons_icon","type","onChange","placeholder","disabled","onClick","ui_elements_heading","ui_elements_subHeading","ui_elements_info_display","React","Component","Background","fetchPhotos","index","Math","floor","random","makeRequestURL","image","items","link","location","place","prevProps","style","backgroundImage","App","getCityName","console","log","background_bg","front_weather","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.bddf9b7b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './weather-icons/css/weather-icons.min.css';\r\nimport './icon.css';\r\n\r\nfunction Icon(props) {\r\n\r\n  let name = 'wi wi-owm-' + props.iconName;\r\n\r\n    return (\r\n      <div className='weather-icon'>\r\n        <i className={name}></i>\r\n      </div>\r\n    )\r\n}\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nimport './heading.css'\r\n\r\nfunction Heading(props) {\r\n  return (\r\n    <h1 className='location-name'>\r\n      {props.content}\r\n    </h1>\r\n  );\r\n}\r\n\r\nexport default Heading;\r\n","import React from 'react';\r\n\r\nimport './info-display.css'\r\n\r\nfunction InfoDisplay(props) {\r\n  return (\r\n    <h5 className='info-item'>\r\n      {props.name}\r\n      {props.content}\r\n      {props.units}\r\n    </h5>\r\n  );\r\n}\r\n\r\nexport default InfoDisplay;\r\n","import React from 'react';\r\n\r\nimport './subHeading.css'\r\n\r\nfunction SubHeading(props) {\r\n  return (\r\n    <h3 className='subHeading'>\r\n      {props.content}\r\n    </h3>\r\n  );\r\n}\r\n\r\nexport default SubHeading;\r\n","import React from 'react';\r\nimport Icon from './icons/icon';\r\nimport Heading from './ui-elements/heading';\r\nimport InfoDisplay from './ui-elements/info-display';\r\nimport SubHeading from './ui-elements/subHeading';\r\n\r\nimport './weather.css';\r\n\r\nconst baseURL = 'https://api.openweathermap.org/data/2.5/weather?q=',\r\n      API = '&appid=3fbf7e30fe0764f00597aed750bf6117',\r\n      units = '&units=metric';\r\n\r\nclass Weather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      loading: false,\r\n      cityName: null,\r\n      weatherDescription: null,\r\n      icon: null,\r\n      temp: null,\r\n      pressure: null,\r\n      humidity: null,\r\n      wind: null,\r\n      searchValue : 'London, UK'\r\n    };\r\n    this.updateInput = this.updateInput.bind(this);\r\n    // this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  updateInput(event){\r\n    this.setState({searchValue : event.target.value})\r\n  }\r\n\r\n  sendToParent = () => {\r\n    this.props.callbackFromParent(this.state.cityName);\r\n  }\r\n\r\n  fetchWeather = () => {\r\n    // console.log('Your input value is: ' + this.state.searchValue);\r\n    let URL = baseURL + this.state.searchValue + API + units;\r\n    // console.log(URL);\r\n    this.setState({loading: true})\r\n    fetch(URL)\r\n      .then(response => response.json())\r\n      .then(result => this.setState({\r\n        cityName: result.name,\r\n        weatherDescription: result.weather[0].description,\r\n        icon: result.weather[0].id,\r\n        temp: result.main.temp,\r\n        pressure: result.main.pressure,\r\n        humidity: result.main.humidity,\r\n        wind: result.wind.speed,\r\n        error: null,\r\n        loading: false\r\n      }))\r\n      .catch(e => this.setState({\r\n        cityName: '',\r\n        weatherDescription: '',\r\n        icon: '',\r\n        temp: '',\r\n        pressure: '',\r\n        humidity: '',\r\n        wind: '',\r\n        error: e.message,\r\n        loading: false\r\n      }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchWeather();\r\n  }\r\n\r\n  fetchAndSend = () => {\r\n    this.fetchWeather();\r\n    setTimeout(this.sendToParent, 333);\r\n  }\r\n  render(){\r\n    const {loading, error, cityName, weatherDescription, temp, pressure, humidity, wind} = this.state;\r\n    let propWeather = this.state.icon;\r\n\r\n    return (\r\n      <div className='weather-panel'>\r\n        <div className='weather-dashboard'>\r\n          <div className='weather-left'>\r\n            <Icon iconName={propWeather}/>\r\n          </div>\r\n          <div className='weather-info'>\r\n            <input type=\"text\" onChange={this.updateInput} placeholder=\"London, UK\"></input>\r\n            <button disabled={loading} onClick={this.fetchAndSend}>Search</button>\r\n            {loading\r\n              ? <div className='loader'>Loading...</div>\r\n              : (error\r\n                ? <div>{error}</div>\r\n                : <div>\r\n                    <Heading content={cityName}/>\r\n                    <SubHeading content={weatherDescription}/>\r\n                    <InfoDisplay name='Temperature: ' content={temp} units='Â°'/>\r\n                    <InfoDisplay name='Wind: ' content={wind} units='m/s'/>\r\n                    <InfoDisplay name='Pressure: ' content={pressure} units='hPa'/>\r\n                    <InfoDisplay name='Humidity: ' content={humidity} units='%'/>\r\n                  </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Weather;\r\n//\r\n// const sendLocation = () => {\r\n//   return this.state.cityName;\r\n// }\r\n// export {sendLocation};\r\n","import React from 'react';\r\n\r\nimport './bg.css'\r\n\r\nclass Background extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      location: this.props.place,\r\n      image: null,\r\n      error: null,\r\n      loading: false\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n    if (this.props.place !== prevProps.place) {\r\n      // this.fetchData(this.props.userID);\r\n      this.setState({location: this.props.place});\r\n      // setInterval(this.fetchPhotos, 15000);\r\n      this.fetchPhotos();\r\n\r\n    }\r\n  }\r\n\r\n  makeRequestURL() {\r\n    const baseURL = 'https://www.googleapis.com/customsearch/v1?',\r\n          API = '&key=AIzaSyAkMHsrBPOr_eZOzjgrIMJyhYMQQCzt1Rs',\r\n          cx = '&cx=004252786716002317765:mskntj5y7hw',\r\n          searchType = '&searchType=image',\r\n          imageSize = '&imgSize=huge&imgType=photo',\r\n          query = 'q=' + this.props.place + '_city';\r\n    const URL = baseURL + query + cx + API + searchType + imageSize;\r\n\r\n    return URL;\r\n  }\r\n\r\n  fetchPhotos = () => {\r\n    let index = Math.floor(Math.random() * 10)\r\n    fetch(this.makeRequestURL())\r\n      .then(response => response.json())\r\n      .then(result => this.setState({\r\n        image: result.items[index].link,\r\n        error: null,\r\n        loading: false\r\n      }))\r\n      .catch(e => this.setState({\r\n        result: '',\r\n        error: e.message,\r\n        loading: false\r\n      }));\r\n      // console.log(this.state.result, this.state.location, this.props.place);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchPhotos();\r\n  }\r\n\r\n  render() {\r\n    const {loading, error, image} = this.state;\r\n    return (\r\n      <div>\r\n        {loading\r\n          ? <div></div>\r\n          : (error\r\n            ? <div>{error}</div>\r\n            : <div className='background' style={{backgroundImage: \"url(\" + image + \")\"}}></div>\r\n          )}\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Background;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Weather from './Components/front/weather';\r\nimport Background from './Components/background/bg';\r\n// import { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport './reset.css'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      cityName: 'London'\r\n    }\r\n  }\r\n\r\n  getCityName = (cityName) => {\r\n    this.setState({cityName : cityName});\r\n    console.log('index.js on update: ' + this.state.cityName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Background place={this.state.cityName}/>\r\n        <Weather callbackFromParent={this.getCityName} className='weather'/>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n<App/>, document.querySelector('#root')\r\n)\r\n// ReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\r\n"],"sourceRoot":""}